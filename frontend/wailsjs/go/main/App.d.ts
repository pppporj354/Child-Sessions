// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {model} from '../models';

export function AchieveGoal(arg1:number):Promise<model.Goal>;

export function AddNote(arg1:number,arg2:string,arg3:string):Promise<model.Note>;

export function AddReward(arg1:number,arg2:any,arg3:string,arg4:number,arg5:string):Promise<model.Reward>;

export function AutoPauseInactiveActivities(arg1:number,arg2:number):Promise<Array<model.SessionActivity>>;

export function CreateActivity(arg1:string,arg2:string,arg3:number):Promise<model.Activity>;

export function CreateChild(arg1:string,arg2:string,arg3:string,arg4:string,arg5:string,arg6:string):Promise<model.Child>;

export function CreateFlashcard(arg1:string,arg2:string,arg3:string,arg4:string):Promise<model.Flashcard>;

export function CreateGoal(arg1:number,arg2:string,arg3:string,arg4:number,arg5:string):Promise<model.Goal>;

export function CreateNoteTemplate(arg1:string,arg2:string,arg3:string):Promise<model.NoteTemplate>;

export function DeleteChild(arg1:number):Promise<void>;

export function DeleteNote(arg1:number):Promise<void>;

export function DeleteNoteTemplate(arg1:number):Promise<void>;

export function EndActivityInSession(arg1:number,arg2:string):Promise<model.SessionActivity>;

export function EndSession(arg1:number,arg2:string):Promise<model.Session>;

export function GenerateSessionSummary(arg1:number):Promise<Record<string, any>>;

export function GetActiveActivitiesInSession(arg1:number):Promise<Array<model.SessionActivity>>;

export function GetActiveSession(arg1:number):Promise<model.Session>;

export function GetActivityByID(arg1:number):Promise<model.Activity>;

export function GetAllActivities():Promise<Array<model.Activity>>;

export function GetAllChildren():Promise<Array<model.Child>>;

export function GetAllNoteTemplates():Promise<Array<model.NoteTemplate>>;

export function GetChildActivityFrequency(arg1:number):Promise<Record<string, number>>;

export function GetChildByID(arg1:number):Promise<model.Child>;

export function GetChildGoals(arg1:number):Promise<Array<model.Goal>>;

export function GetChildNoteKeywordFrequency(arg1:number):Promise<Record<string, number>>;

export function GetChildProgressSummary(arg1:number):Promise<Record<string, any>>;

export function GetChildRewardTrends(arg1:number):Promise<Array<Record<string, any>>>;

export function GetChildRewards(arg1:number):Promise<Array<model.Reward>>;

export function GetCurrentTime():Promise<string>;

export function GetFlashcardsByCategory(arg1:string):Promise<Array<model.Flashcard>>;

export function GetRewardSummary(arg1:number):Promise<Record<string, any>>;

export function GetSessionActivities(arg1:number):Promise<Array<model.SessionActivity>>;

export function GetSessionActivityHistoryByChild(arg1:number):Promise<Array<model.SessionActivity>>;

export function GetSessionByID(arg1:number):Promise<model.Session>;

export function GetSessionNotes(arg1:number):Promise<Array<model.Note>>;

export function GetSessionProgress(arg1:number):Promise<Record<string, any>>;

export function GetSessionsByChild(arg1:number):Promise<Array<model.Session>>;

export function Greet(arg1:string):Promise<string>;

export function LogFlashcardResponse(arg1:number,arg2:number,arg3:string,arg4:string):Promise<model.SessionFlashcard>;

export function StartActivityInSession(arg1:number,arg2:number,arg3:string):Promise<model.SessionActivity>;

export function StartSession(arg1:number):Promise<model.Session>;

export function UpdateActivityInSession(arg1:number,arg2:string):Promise<model.SessionActivity>;

export function UpdateChild(arg1:number,arg2:string,arg3:string,arg4:string,arg5:string,arg6:string):Promise<model.Child>;

export function UpdateNote(arg1:number,arg2:string,arg3:string):Promise<model.Note>;

export function UpdateNoteTemplate(arg1:number,arg2:string,arg3:string,arg4:string):Promise<model.NoteTemplate>;

export function UpdateSessionSummaryNotes(arg1:number,arg2:string):Promise<void>;

export function ValidateSession(arg1:number):Promise<boolean>;
